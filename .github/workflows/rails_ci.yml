name: Ruby and/or Rails continuous integration workflow

on:
  workflow_call:
    inputs:
      cve-ignorelist:
        description: "space-delimited string of CVEs to ignore"
        type: string
        required: false
        default: ""
      coyote-integration-tests:
        description: "Does the repo need to run coyote integration tests?"
        type: boolean
        required: false
        default: false

jobs:
  continuous-integration:
    runs-on: self-hosted
    env:
      RAILS_ENV: test
      DATABASE_URL: 'mysql2://127.0.0.1' # shogo82148/actions-setup-mysql@v1 doesn't work with socket
    steps:
      - uses: tedconf/setup-ruby@0.0.1
        with:
            ssh-private-key: ${{ secrets.TEDCONF_GH_ACTIONS_JENKINS_PRIV_SSH_KEY }}
            rubygems-key: ${{ secrets.BUNDLE_RUBYGEMS__TED__COM }}

      - name: Configure sysctl limits on localhost to be able to run Elasticsearch
        # Required to get Elasticsearch container to run on shgar host
        shell: bash
        if: inputs.coyote-integration-tests
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Setup and start Elasticsearch
        uses: tedconf/elasticsearch-github-actions@lee-self_hosted
        if: inputs.coyote-integration-tests
        with:
          stack-version: 6.8.23
          plugins: 'analysis-icu analysis-phonetic'

      - name: Elasticsearch is reachable
        if: inputs.coyote-integration-tests
        run: |
          curl --verbose --show-error http://localhost:9200

      - name: Update bundle-audit
        run: bundle exec bundle-audit update
      - name: Gem audit (with CVE ignorelist)
        if: inputs.cve-ignorelist != ''
        run: |
          bundle exec bundler-audit --ignore ${{ inputs.cve-ignorelist }}
      - name: Gem audit (without CVE ignorelist)
        if: inputs.cve-ignorelist == ''
        run: bundle exec bundler-audit
      - name: Scan code for vulnerabilities
        run: |
          bundle exec brakeman -q -w2
      - name: Run rubocop linters
        run: |
          bundle exec rubocop --parallel
      - name: Set up test secrets
        run: cp config/secrets.github.yml config/secrets.yml
      - name: Setup MySQL
        # Workaround for MySQL in ACT until
        # https://bugs.launchpad.net/ubuntu/focal/+source/mysql-8.0/+bug/1899248 is
        # released
        if: env.ACT
        uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: '8.0'
          root-password: root
      - name: Start MySQL
        if: ${{ !env.ACT }}
        run: sudo /etc/init.d/mysql start
      - name: Create DB
        env:
          RAILS_ENV: test
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load
      - name: Run tests
        run: |
          bundle exec rspec
      # prevent accidentally leaking secrets
      - name: Remove test secrets
        run: |
          rm config/secrets.yml
