name: Rails workflow for deployment and deployment-related processes

on:
  workflow_call:

jobs:
  continuous-deployment:
    runs-on: self-hosted
    steps:
      - uses: tedconf/setup-ruby@1.1.0
        with:
          ssh-private-key: ${{ secrets.TEDCONF_GH_ACTIONS_JENKINS_PRIV_SSH_KEY }}
          rubygems-key: ${{ secrets.BUNDLE_RUBYGEMS__TED__COM }}
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.RAILS_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.RAILS_GPG_PASSPHRASE }}
      - name: Add gateway to known hosts
        env:
          TED_SSH_PORT: ${{ secrets.TED_SSH_PORT }}
          TED_BASTION_HOST_NAME: ${{ secrets.TED_BASTION_HOST_NAME }}
          TED_BASTION_HOST_NAME_CNAME: ${{ secrets.TED_BASTION_HOST_NAME_CNAME }}
        run: |
          ssh-keyscan -p $TED_SSH_PORT $TED_BASTION_HOST_NAME >> ~/.ssh/known_hosts
          ssh-keyscan -p $TED_SSH_PORT $TED_BASTION_HOST_NAME_CNAME >> ~/.ssh/known_hosts
      - name: Deploy feature branch to staging
        if: ${{ github.event_name == 'push' && contains(github.ref_name, 'fbranch') }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEDCONF_GH_ACTIONS_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEDCONF_GH_ACTIONS_AWS_SECRET_ACCESS_KEY }}
        # suppress tty output
        shell: 'script --return --quiet --command "bash {0}"'
        run: |
          bundle exec cap staging git:${GITHUB_REF##*/} \
            nginx:upload_site_config \
            unicorn:upload_initd \
            deploy \
            unicorn:restart \
            nginx:reload \
            with_database=false \
            create_dns=true
      - name: Deploy main branch to staging
        if: ${{ github.event_name == 'push' && (github.ref_name == 'main' || github.ref_name == 'master') }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEDCONF_GH_ACTIONS_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEDCONF_GH_ACTIONS_AWS_SECRET_ACCESS_KEY }}
        # supress tty output
        shell: 'script --return --quiet --command "bash {0}"'
        run: |
          bundle exec cap staging deploy
      - name: Check github reference for production tag format
        if: ${{github.ref_type == 'tag' }}
        shell: bash
        run: |
          has_prod_tag=0
          if [[ ${{ github.ref_name }} =~ [0-9]{8}_[0-9]+ ]]; then
            echo "Production tag found!"
            has_prod_tag=1
          fi
          echo "production_tag=$has_prod_tag" >> $GITHUB_ENV
      - name: Deploy main branch to production
        if: env.production_tag == 1
        shell: 'script --return --quiet --command "bash {0}"'
        run: |
          bundle exec cap production deploy
